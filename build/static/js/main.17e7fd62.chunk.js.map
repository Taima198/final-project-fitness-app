{"version":3,"sources":["components/images/victor.jpg","constants/apiConstants.js","components/LoginForm/LoginForm.js","components/RegisterationForm/RegesterationForm1.js","components/Home/Home.js","components/userProfile/UserProfile.js","components/contactUs/ContactUs.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","process","REACT_APP_SERVER_URL","withRouter","props","console","log","_useContext","useContext","UserContext","userEmail","setUserEmail","_useState","useState","email","password","successMessage","_useState2","Object","slicedToArray","state","setState","useEffect","handleChange","e","_e$target","target","id","value","prevState","objectSpread","defineProperty","handleSubmitClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","payload","response","wrap","_context","prev","next","preventDefault","userName","JSON","stringify","axios","post","sent","status","redirectToHome","t0","data","headers","stop","_x","apply","this","arguments","history","push","react_default","createElement","className","type","aria-describedby","placeholder","onChange","onClick","style","display","role","_React$useState","React","_React$useState2","errorMessage","_React$useState3","_React$useState4","errorMessage2","genderOptions","text","fitnessGoalOptions","fitnessLevelOptions","selectedGender","setSelectedGender","_useState3","_useState4","selectedGoal","setSelectedGoal","_useState5","_useState6","selectedLevel","setSelectedLevel","_useState7","confirmPassword","gender","birthdayDate","height","weight","fitnessLevel","fitnessGoal","trainingFrequency","iron","vitC","vitD","vitB12","omega3","calcium","potasium","magnisum","_useState8","handleChangeSelect","_e$target2","_useState9","_useState10","handleCheckboxChange","_e$target3","map","option","key","min","max","for","loading","setLoading","s","i","date","length","suggestion","iron_2","vitC_2","vitD_2","vitB12_2","omega3_2","calcium_2","potasium_2","magnisum_2","successMessage_2","chest","back","shoulders","core","legs","glutes","triceps","biceps","running_startTime","running_endTime","swimming_startTime","swimming_endTime","hiit_startTime","hiit_endTime","miss_startTime","miss_endTime","jogging_startTime","jogging_endTime","cross_startTime","cross_endTime","protien_intake","carbs_intake","fats_intake","day_event","handleCheckboxChange2","handleCheckboxChange3","handleSubmitClick_weightTraining","_ref2","_callee2","_context2","clientEmail","handleSubmitClick_cardio","_ref3","_callee3","_context3","_x2","handleSubmitClick_supplements","_ref4","_callee4","_context4","_x3","handleSubmitClick_nutrition","_ref5","_callee5","_context5","_x4","reactjs_popup_esm","trigger","sassy_datepicker_esm","toString","modal","nested","setErrorMessage","setErrorMessage2","test","pass","alert","message","placeHolder","rows","cols","react_router_dom","Navbar","Container","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","maxHeight","collapse","navbar-collapse","react_router","path","components_Home_Home","components_LoginForm_LoginForm","RegesterationForm1","userProfile_UserProfile","contactUs_ContactUs","createContext","App","backgroundImage","concat","require","Provider","components_Header_Header","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.17e7fd62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/victor.ab6ec54b.jpg\";","export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { render } from '@testing-library/react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nimport { UserContext } from '../../App';\r\nimport { useEffect } from 'react';\r\n\r\nfunction LoginForm(props) {\r\n\r\n    console.log(\" login page\")\r\n    const { userEmail, setUserEmail } = useContext(UserContext);\r\n    const [state, setState] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        successMessage: null\r\n    })\r\n    useEffect(() => {\r\n        // ...\r\n        console.log(\"user email ::\" + userEmail)\r\n    }, [userEmail]);\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        console.log(state.email);\r\n        const payload = {\r\n            \"id\": '',\r\n            \"userName\": '',\r\n            \"email\": state.email,\r\n            \"password\": state.password\r\n        }\r\n        console.log('hey', JSON.stringify(payload))\r\n        var response;\r\n\r\n        try {\r\n\r\n\r\n            response = await axios.post(`http://localhost:8080/client/login`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"login successfully:)\")\r\n                // const { userEmail, setUserEmail } = useContext(UserContext);\r\n                // setUserEmail((prevState) => ({\r\n                //     userEmail: state.email\r\n                // }))\r\n                // console.log(\"email :: \" + userEmail)\r\n                console.log(\"state.email \" + state.email)\r\n                setUserEmail(state.email)\r\n                console.log(\"email :: \" + userEmail)\r\n                redirectToHome();\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"you can't login...\")\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const redirectToHome = () => {\r\n        props.history.push('/home');\r\n        //props.updateTitle('Home');\r\n        console.log(\"ittttttt isss redirect to home\");\r\n    }\r\n    const redirectToRegister1 = () => {\r\n        props.history.push('/register');\r\n        //props.updateTitle('Register');\r\n        console.log(\"ittttttt isss redirect to register\");\r\n    }\r\n    // const userEmail = useContext(UserContext);\r\n    // console.log(\"email:: \" + userEmail);\r\n    return (\r\n        <div className=\"out-card\">\r\n            <div className=\"form-login-container\">\r\n                <form>\r\n                    <div className=\"feild\">\r\n                        <p className=\"login-para\">Email address : </p>\r\n                        <input type=\"email\"\r\n                            className=\"form-controll\"\r\n                            id=\"email\"\r\n                            aria-describedby=\"emailHelp\"\r\n                            placeholder=\"Enter email\"\r\n                            value={state.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"feild\">\r\n                        <p className=\"login-para\">Password :</p>\r\n                        <input type=\"password\"\r\n                            className=\"form-controll\"\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={state.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleSubmitClick}\r\n                    >Submit</button>\r\n                </form>\r\n\r\n                <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                    {state.successMessage}\r\n                </div>\r\n                <div className=\"registerMessage\">\r\n                    <span>Dont have an account? </span>\r\n                    <br></br>\r\n                    <span className=\"loginText\" onClick={() => redirectToRegister1()}>Register</span>\r\n                </div>\r\n                {/* <div className=\"mt-2\">\r\n                        <span className=\"mainPageText\" onClick={() => redirectToHome()}>Click me to go to home page</span>\r\n                    </div> */}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './RegisterationForm.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\n\r\nimport { UserContext } from '../../App';\r\nimport { useEffect } from 'react';\r\n\r\nfunction RegistrationForm1(props) {\r\n    const { userEmail, setUserEmail } = useContext(UserContext);\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [errorMessage2, setErrorMessage2] = React.useState(\"\");\r\n    useEffect(() => {\r\n        // // ...\r\n        // try {\r\n        //     const payload = {\r\n        //         \"date\": \"12.12.12\",\r\n        //         \"email\": userEmail\r\n        //     }\r\n\r\n        //     const response = await axios.post(`http://localhost:8080/client/get-suggestions`, payload)\r\n\r\n        //     if (response.status == 200) {\r\n        //         console.log(\"reponse data\", response.data)\r\n        //         // setUserEmail(state.email)\r\n        //     }\r\n        //     else if (response.status == 400) {\r\n        //         console.log(\"you can't login...\")\r\n        //     }\r\n        // }\r\n        // catch (error) {\r\n        //     // console.log(\"error::\" + error.response.data.error)\r\n\r\n        //     if (error.response) {\r\n        //         console.log(error.response.data);\r\n        //         console.log(error.response.status);\r\n        //         console.log(error.response.headers);\r\n        //     }\r\n        //     // console.log(\"error::\" + response.status)\r\n        // }\r\n        console.log(\"user email ::\" + userEmail)\r\n    }, [userEmail]);\r\n    const genderOptions = [\r\n        { value: '', text: ' -- Gender -- ' },\r\n        { value: 'male', text: 'Male' },\r\n        { value: 'female', text: 'Female' },\r\n    ];\r\n    const fitnessGoalOptions = [\r\n        { value: '', text: ' -- Fitness goal -- ' },\r\n        { value: 'Bulk', text: 'bulk' },\r\n        { value: 'fit', text: 'fit' },\r\n        { value: 'maintenance', text: 'maintenance' },\r\n    ];\r\n    const fitnessLevelOptions = [\r\n        { value: '', text: ' -- Fitness level -- ' },\r\n        { value: 'Begginer', text: 'Begginer' },\r\n        { value: 'Advanced', text: 'Advanced' },\r\n        { value: 'Intermedate', text: 'Intermedate' },\r\n    ];\r\n    const [selectedGender, setSelectedGender] = useState(genderOptions[0].value);\r\n    const [selectedGoal, setSelectedGoal] = useState(fitnessGoalOptions[0].value);\r\n    const [selectedLevel, setSelectedLevel] = useState(fitnessLevelOptions[0].value);\r\n\r\n    const [state, setState] = useState({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        gender: \"\",\r\n        birthdayDate: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        fitnessLevel: \"\",\r\n        fitnessGoal: \"\",\r\n        trainingFrequency: \"\",\r\n        iron: false,\r\n        vitC: false,\r\n        vitD: false,\r\n        vitB12: false,\r\n        omega3: false,\r\n        calcium: false,\r\n        potasium: false,\r\n        magnisum: false,\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    // function isValidPass(pass) {\r\n    //     return /^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8}$/.test(pass);\r\n    // }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        const { id, value } = e.target\r\n        if (id == 'gender')\r\n            setSelectedGender(e.target.value);\r\n        else if (id == 'fitnessGoal')\r\n            setSelectedGoal(e.target.value);\r\n        else if (id == 'fitnessLevel')\r\n            setSelectedLevel(e.target.value);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"userName\": state.userName,\r\n            \"email\": state.email,\r\n            \"password\": state.password,\r\n            \"gender\": state.gender,\r\n            \"birthdayDate\": state.birthdayDate,\r\n            \"height\": state.height,\r\n            \"weight\": state.weight,\r\n            \"fitnessLevel\": state.fitnessLevel,\r\n            \"fitnessGoal\": state.fitnessGoal,\r\n            \"trainingFrequency\": state.trainingFrequency,\r\n            \"iron\": state.iron,\r\n            \"vitC\": state.vitC,\r\n            \"vitD\": state.vitD,\r\n            \"vitB12\": state.vitB12,\r\n            \"omega3\": state.omega3,\r\n            \"calcium\": state.calcium,\r\n            \"potasium\": state.potasium,\r\n            \"magnisum\": state.magnisum\r\n        }\r\n\r\n        // if (!isValidPass(state.password)) {\r\n        //     setErrorMessage(\"Weak password!, password must contain: 8 characters length,2 letters in Upper Case,1 Special Character (!@#$&*),2 numerals (0-9),3 letters in Lower Case\")\r\n        // }\r\n        console.log('heyaaaaaaaaaaaaaaaaaa', JSON.stringify(payload))\r\n\r\n        try {\r\n\r\n\r\n            const response = await axios.post(`http://localhost:8080/client/addRegForm\r\n    `, payload)\r\n            console.log(\"response::\" + response.status)\r\n            if (response.status == 200) {\r\n                console.log(\"welcome to the new user :)\")\r\n                setUserEmail(state.email)\r\n\r\n                redirectToHome();\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"already have an account...\")\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        // props.updateTitle('Home');\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToLogin = () => {\r\n        props.history.push('/log-in');\r\n    }\r\n    const [checked, setChecked] = useState(false);\r\n    const handleCheckboxChange = (e) => {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'iron':\r\n                state.iron = !state.iron;\r\n                break;\r\n            case 'vitC':\r\n                state.vitC = !state.vitC;\r\n                break;\r\n            case 'vitD':\r\n                state.vitD = !state.vitD;\r\n                break;\r\n            case 'vitB12':\r\n                state.vitB12 = !state.vitB12;\r\n                break;\r\n            case 'omega3':\r\n                state.omega3 = !state.omega3;\r\n                break;\r\n            case 'calcium':\r\n                state.calcium = !state.calcium;\r\n                break;\r\n            case 'potasium':\r\n                state.potasium = !state.potasium;\r\n                break;\r\n            case 'magnisum':\r\n                state.magnisum = !state.magnisum;\r\n                break;\r\n\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"outter_card  login-card mt-2 hv-center\">\r\n            <form className=\"form-register-container\">\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Create user name :</p>\r\n                    <input type=\"text\"\r\n                        id=\"userName\"\r\n                        className=\"form-controll\"\r\n                        placeholder=\"Enter your name\"\r\n                        value={state.userName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Create email address :</p>\r\n                    <input type=\"email\"\r\n                        className=\"form-controll\"\r\n                        id=\"email\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Enter your email\"\r\n                        value={state.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild2\">\r\n                    {errorMessage2 && <div className=\"error\"> {errorMessage2} </div>}\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Create password :</p>\r\n                    <input type=\"password\"\r\n                        className=\"form-controll\"\r\n                        id=\"password\"\r\n                        placeholder=\"Insert password\"\r\n                        value={state.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Confirm password :</p>\r\n                    <input type=\"password\"\r\n                        className=\"form-controll\"\r\n                        id=\"confirmPassword\"\r\n                        placeholder=\"Confirm password\"\r\n                        value={state.confirmPassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild2\">\r\n                    {errorMessage && <div className=\"error\"> {errorMessage} </div>}\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Select your gender :</p>\r\n                    <select value={selectedGender} onChange={handleChangeSelect} id=\"gender\" className=\"gender\">\r\n                        {genderOptions.map(option => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.text}\r\n                            </option>\r\n                        ))}\r\n\r\n                    </select>\r\n\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Set your birthday date :</p>\r\n                    <input type=\"date\"\r\n                        className=\"form-controll\"\r\n                        id=\"birthdayDate\"\r\n                        placeholder=\"Enter your birthday date\"\r\n                        value={state.birthdayDate}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">What's your height ? (cm)</p>\r\n                    <input type=\"number\"\r\n                        className=\"form-controll\"\r\n                        id=\"height\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Enter your height\"\r\n                        value={state.height}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">What's your weight ? (kg)</p>\r\n                    <input type=\"number\"\r\n                        className=\"form-controll\"\r\n                        id=\"weight\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Enter your weight\"\r\n                        value={state.weight}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">What's your fitness level ? </p>\r\n                    <select value={selectedLevel} onChange={handleChangeSelect} id=\"fitnessLevel\" className=\"fitnessLevel\">\r\n                        {fitnessLevelOptions.map(option => (\r\n                            <option className=\"optionss\" key={option.value} value={option.value}>\r\n                                {option.text}\r\n                            </option>\r\n                        ))}\r\n\r\n\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">What's your fitness goal ? </p>\r\n                    <select value={selectedGoal} onChange={handleChangeSelect} id=\"fitnessGoal\" className=\"fitnessGoal\">\r\n                        {fitnessGoalOptions.map(option => (\r\n                            <option className=\"optionss\" key={option.value} value={option.value}>\r\n                                {option.text}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">What's your training days per week ? </p>\r\n                    <input type=\"number\" value={state.trainingFrequency} onChange={handleChange} id=\"trainingFrequency\" className=\"quantity\" min=\"1\" max=\"7\" />\r\n\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Deficincies: </p>\r\n                    <input className=\"checked\" id=\"iron\" value={state.iron} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"iron\"> Iron</label><br></br>\r\n                    <input className=\"checked\" id=\"vitC\" value={state.vitC} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"vitC\"> Vitamin C</label><br></br>\r\n                    <input className=\"checked\" id=\"vitD\" value={state.vitD} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"vitD\"> Vitamin D</label><br></br>\r\n                    <input className=\"checked\" id=\"omega3\" value={state.omega3} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"omaga3\"> Omega 3</label><br></br>\r\n                    <input className=\"checked\" id=\"vitB12\" value={state.vitB12} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"vitB12\"> Vitamin B12</label><br></br>\r\n                    <input className=\"checked\" id=\"calcium\" value={state.calcium} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"calcium\"> Calcium</label><br></br>\r\n                    <input className=\"checked\" id=\"potasium\" value={state.potasium} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"potasium\"> Potasium</label><br></br>\r\n                    <input className=\"checked\" id=\"magnisum\" value={state.magnisum} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                    <label for=\"magnisum\"> Magnisum</label><br></br>\r\n\r\n                </div>\r\n\r\n                <div className=\"feild3\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleSubmitClick}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"alert alert-success mt\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                    {state.successMessage}\r\n                </div>\r\n                <div className=\"feild-last\">\r\n                    <span onClick={() => redirectToLogin()}>Already have an account?</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegistrationForm1);","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Home.css';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiConstants';\r\nimport axios from 'axios'\r\nimport DatePicker from 'sassy-datepicker';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport { HiOutlinePlus } from 'react-icons/hi';\r\nimport { useContext } from 'react';\r\n\r\nimport { UserContext } from '../../App';\r\nimport { useEffect } from 'react';\r\n// import { loadingIndicatorCSS } from 'react-select/dist/declarations/src/components/indicators';\r\nfunction Home(props) {\r\n    const { userEmail, setUserEmail } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false)\r\n    console.log(\" home page\")\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const onChange = (date) => {\r\n        console.log(date.toString());\r\n\r\n    }\r\n    useEffect(async () => {\r\n        // ...\r\n        try {\r\n            const payload = {\r\n                \"date\": \"12.12.12\",\r\n                \"email\": userEmail\r\n            }\r\n\r\n            const response = await axios.post(`http://localhost:8080/client/get-suggestions`, payload)\r\n\r\n            if (response.status == 200) {\r\n                var s = \"\"\r\n                for (var i = 0; i < response.data.length; i++) {\r\n                    s = s + \"\\r\\n\" + response.data[i] + \"\\r\\n\";\r\n                    console.log(\"rep\", response.data[i])\r\n                }\r\n                console.log(\"s :: \", s)\r\n                if (loading == false) {\r\n                    setLoading(true)\r\n                    setState({ suggestion: s })\r\n                    console.log(\"suggestions:: \", state.suggestion)\r\n\r\n                }\r\n\r\n\r\n                // setUserEmail(state.email)\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"you can't login...\")\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n        console.log(\"user email ::\" + userEmail)\r\n    });\r\n    const divVitaminListStyle = {\r\n        margin: 100,\r\n        width: 300\r\n\r\n    }\r\n    function redirectToLogin() {\r\n        props.history.push('/login');\r\n    }\r\n    const [state, setState] = useState({\r\n        iron_2: false,\r\n        vitC_2: false,\r\n        vitD_2: false,\r\n        vitB12_2: false,\r\n        omega3_2: false,\r\n        calcium_2: false,\r\n        potasium_2: false,\r\n        magnisum_2: false,\r\n        successMessage_2: null,\r\n        chest: false,\r\n        back: false,\r\n        shoulders: false,\r\n        core: false,\r\n        legs: false,\r\n        glutes: false,\r\n        triceps: false,\r\n        biceps: false,\r\n        running_startTime: \"\",\r\n        running_endTime: \"\",\r\n        swimming_startTime: \"\",\r\n        swimming_endTime: \"\",\r\n        hiit_startTime: \"\",\r\n        hiit_endTime: \"\",\r\n        miss_startTime: \"\",\r\n        miss_endTime: \"\",\r\n        jogging_startTime: \"\",\r\n        jogging_endTime: \"\",\r\n        cross_startTime: \"\",\r\n        cross_endTime: \"\",\r\n        protien_intake: \"\",\r\n        carbs_intake: \"\",\r\n        fats_intake: \"\",\r\n        suggestion: \"okk\",\r\n        day_event: \"i trained legs today\"\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    const handleCheckboxChange2 = (e) => {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'iron-2':\r\n                state.iron_2 = !state.iron_2;\r\n                break;\r\n            case 'vitC-2':\r\n                state.vitC_2 = !state.vitC_2;\r\n                break;\r\n            case 'vitD-2':\r\n                state.vitD_2 = !state.vitD_2;\r\n                break;\r\n            case 'vitB12-2':\r\n                state.vitB12_2 = !state.vitB12_2;\r\n                break;\r\n            case 'omega3-2':\r\n                state.omega3_2 = !state.omega3_2;\r\n                break;\r\n            case 'calcium-2':\r\n                state.calcium_2 = !state.calcium_2;\r\n                break;\r\n            case 'potasium-2':\r\n                state.potasium_2 = !state.potasium_2;\r\n                break;\r\n            case 'magnisum-2':\r\n                state.magnisum_2 = !state.magnisum_2;\r\n                break;\r\n\r\n        }\r\n    };\r\n    const handleCheckboxChange3 = (e) => {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'chest':\r\n                state.chest = !state.chest;\r\n                break;\r\n            case 'back':\r\n                state.back = !state.back;\r\n                break;\r\n            case 'shoulders':\r\n                state.shoulders = !state.shoulders;\r\n                break;\r\n            case 'core':\r\n                state.core = !state.core;\r\n                break;\r\n            case 'legs':\r\n                state.legs = !state.legs;\r\n                break;\r\n            case 'glutes':\r\n                state.glutes = !state.glutes;\r\n                break;\r\n            case 'biceps':\r\n                state.biceps = !state.biceps;\r\n                break;\r\n            case 'triceps':\r\n                state.triceps = !state.triceps;\r\n                break;\r\n\r\n        }\r\n    };\r\n    const handleSubmitClick_weightTraining = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"clientEmail\": userEmail,\r\n            \"id\": \"\",\r\n            \"chest\": state.chest,\r\n            \"back\": state.back,\r\n            \"shoulders\": state.shoulders,\r\n            \"core\": state.core,\r\n            \"legs\": state.legs,\r\n            \"glutes\": state.glutes,\r\n            \"triceps\": state.triceps,\r\n            \"biceps\": state.biceps\r\n        }\r\n        console.log('weightsssss::', JSON.stringify(payload))\r\n        var response;\r\n\r\n        try {\r\n\r\n            console.log(\"eshee\");\r\n            response = await axios.post(`http://localhost:8080/client/update-weight-training`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"client info sent to server:)\" + response.status);\r\n\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"client info haven't sent to server...\" + response.status);\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n    }\r\n    const handleSubmitClick_cardio = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"clientEmail\": userEmail,\r\n            \"id\": \"\",\r\n            \"running_startTime\": state.running_startTime,\r\n            \"running_endTime\": state.running_endTime,\r\n            \"swimming_startTime\": state.swimming_startTime,\r\n            \"swimming_endTime\": state.swimming_endTime,\r\n            \"hiit_startTime\": state.hiit_startTime,\r\n            \"hiit_endTime\": state.hiit_endTime,\r\n            \"miss_startTime\": state.miss_startTime,\r\n            \"miss_endTime\": state.miss_endTime,\r\n            \"cross_startTime\": state.cross_startTime,\r\n            \"cross_endTime\": state.cross_endTime,\r\n            \"jogging_startTime\": state.jogging_startTime,\r\n            \"jogging_endTime\": state.jogging_endTime\r\n        }\r\n        console.log('cardiooooo::', JSON.stringify(payload))\r\n        var response;\r\n\r\n        try {\r\n\r\n            console.log(\"eshee\");\r\n            response = await axios.post(`http://localhost:8080/client/update-cardio-training`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"client info sent to server:)\" + response.status);\r\n\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"client info haven't sent to server...\" + response.status);\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n    }\r\n\r\n    const handleSubmitClick_supplements = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"clientEmail\": userEmail,\r\n            \"id\": \"\",\r\n            \"iron_2\": state.iron_2,\r\n            \"vitC_2\": state.vitC_2,\r\n            \"vitD_2\": state.vitD_2,\r\n            \"vitB12_2\": state.vitB12_2,\r\n            \"omega3_2\": state.omega3_2,\r\n            \"calcium_2\": state.calcium_2,\r\n            \"potasium_2\": state.potasium_2,\r\n            \"magnisum_2\": state.magnisum_2,\r\n        }\r\n\r\n\r\n        console.log('suplemetssssss:: ', JSON.stringify(payload))\r\n        var response;\r\n\r\n        // setErrorMessage(\"Info submitted succesfully!\")\r\n\r\n        try {\r\n\r\n            console.log(\"eshee\");\r\n            response = await axios.post(`http://localhost:8080/client/update-suppliments`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"client info sent to server :)\" + response.status);\r\n\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"client info haven't sent to server...\" + response.status);\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleSubmitClick_nutrition = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"clientEmail\": userEmail,\r\n            \"id\": \"\",\r\n            \"protien_intake\": state.protien_intake,\r\n            \"carbs_intake\": state.carbs_intake,\r\n            \"fats_intake\": state.fats_intake\r\n        }\r\n        console.log('nutritionnnn::', JSON.stringify(payload))\r\n        var response;\r\n\r\n        try {\r\n\r\n            console.log(\"eshee\");\r\n            response = await axios.post(`http://localhost:8080/client/update-nutrition-intake`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"client info sent to server:)\" + response.status);\r\n\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"client info haven't sent to server...\" + response.status);\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\" >\r\n            <div className=\"split left\">\r\n                <Popup className=\"main-popup\" trigger={<DatePicker onChange={onChange} />} modal nested>\r\n                    <div className=\"calender-pop-up\">\r\n                        <p>Sports:</p>\r\n                        <div className=\"sport-con\">\r\n                            <Popup trigger={<button className=\"btn\">Weights Training</button>} modal nested>\r\n                                <div className=\"weights-pop-up\">\r\n                                    <input id=\"chest\" value={state.chest} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"chest\"> Chest</label><br></br>\r\n                                    <input id=\"back\" value={state.back} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"back\"> Back</label><br></br>\r\n                                    <input id=\"shoulders\" value={state.shoulders} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"shoulders\"> Shoulders</label><br></br>\r\n                                    <input id=\"core\" value={state.core} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"core\"> Core</label><br></br>\r\n                                    <input id=\"legs\" value={state.legs} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"legs\"> legs</label><br></br>\r\n                                    <input id=\"glutes\" value={state.glutes} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"glutes\"> Glutes</label><br></br>\r\n                                    <input id=\"triceps\" value={state.triceps} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"triceps\"> triceps</label><br></br>\r\n                                    <input id=\"biceps\" value={state.biceps} onChange={handleCheckboxChange3} type=\"checkbox\" />\r\n                                    <label for=\"biceps\"> Biceps</label><br></br>\r\n                                    <button type=\"submit\" onClick={handleSubmitClick_weightTraining} className=\"btnn\">Submit</button>\r\n                                    <div className=\"positive-error\">\r\n                                        {errorMessage && <div className=\"error\"> {errorMessage} </div>}\r\n                                    </div>\r\n                                </div>\r\n                            </Popup>\r\n                            <Popup trigger={<button className=\"btn\">Cardio</button>} modal nested>\r\n                                <div className=\"cardio-pop-up\">\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert running session time :</p>\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"running_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.running_startTime}\r\n                                                onChange={handleChange}\r\n                                            /></div>\r\n                                        <div className=\"time\">\r\n                                            end time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"running_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.running_endTime}\r\n                                                onChange={handleChange}\r\n                                            /></div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit\r\n                                        </button>\r\n                                    </form>\r\n\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert swimming session time :</p>\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"swimming_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.swimming_startTime}\r\n                                                onChange={handleChange}\r\n                                            /></div>\r\n                                        <div className=\"time\">\r\n                                            end time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"swimming_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.swimming_endTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit</button>\r\n                                    </form>\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert HIIT session time :</p>\r\n\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"hiit_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.hiit_startTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"time\">\r\n                                            end time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"hiit_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.hiit_endTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit</button>\r\n                                    </form>\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert MISS session time :\r\n                                        </p>\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"miss_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.miss_startTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"time\">\r\n                                            end time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"miss_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.miss_endTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit\r\n                                        </button>\r\n                                    </form>\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert jogging session time :\r\n                                        </p>\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"jogging_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.jogging_startTime}\r\n                                                onChange={handleChange}\r\n                                            /></div>\r\n                                        <div className=\"time\">\r\n                                            end time :<input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"jogging_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.jogging_endTime}\r\n                                                onChange={handleChange}\r\n                                            /> </div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit</button>\r\n                                    </form>\r\n                                    <form className=\"cardio-form\">\r\n                                        <p className=\"paraa\">Insert Cross session time :\r\n                                        </p>\r\n                                        <div className=\"time\">\r\n                                            start time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"cross_startTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.cross_startTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"time\">\r\n                                            end time :\r\n                                            <input type=\"time\"\r\n                                                className=\"form-co\"\r\n                                                id=\"cross_endTime\"\r\n                                                aria-describedby=\"runningTime\"\r\n                                                placeholder=\"how many time did you run\"\r\n                                                value={state.cross_endTime}\r\n                                                onChange={handleChange}\r\n                                            />\r\n                                        </div>\r\n                                        <button className=\"btnnn\"\r\n                                            type=\"submit\"\r\n                                            onClick={handleSubmitClick_cardio}>\r\n                                            Submit</button>\r\n                                    </form>\r\n                                </div>\r\n                            </Popup>\r\n                        </div>\r\n\r\n\r\n                        <br></br>\r\n                        <div className=\"nutrition-con\">\r\n                            <p className=\"nutrition-feild\" >Nutrition:    </p>\r\n                            <Popup trigger={<button className=\"btn\">Supplements</button>} modal nested>\r\n                                <div className=\"vit-popup\">\r\n                                    <p>Supplements:</p>\r\n                                    <input id=\"iron-2\" value={state.iron_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"iron-2\"> Iron</label><br></br>\r\n                                    <input id=\"vitC-2\" value={state.vitC_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"vitC-2\"> Vitamin C</label><br></br>\r\n                                    <input id=\"vitD-2\" value={state.vitD_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"vitD-2\"> Vitamin D</label><br></br>\r\n                                    <input id=\"omega3-2\" value={state.omega3_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"omega3-2\"> Omega 3</label><br></br>\r\n                                    <input id=\"vitB12-2\" value={state.vitB12_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"vitB12-2\"> Vitamin B12</label><br></br>\r\n                                    <input id=\"calcium-2\" value={state.calcium_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"calcium-2\"> Calcium</label><br></br>\r\n                                    <input id=\"potasium-2\" value={state.potasium_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"potasium-2\"> Potasium</label><br></br>\r\n                                    <input id=\"magnisum-2\" value={state.magnisum_2} onChange={handleCheckboxChange2} type=\"checkbox\" />\r\n                                    <label for=\"magnisum-2\"> Magnisum</label><br></br>\r\n                                    <button className=\"btnn\"\r\n                                        type=\"submit\"\r\n                                        onClick={handleSubmitClick_supplements}>\r\n                                        Submit</button>\r\n                                </div>\r\n                            </Popup>\r\n                            <Popup trigger={<button className=\"btn\">Nutrition</button>} modal nested>\r\n                                <div className=\"nut-popup\">\r\n                                    <p>Submit your nutritional benefits per day:</p>\r\n                                    <div>\r\n                                        <label for=\"protien\">What's your total protien intake today?</label><br></br>\r\n                                        <input className=\"nutrition-supplements-feild\"\r\n                                            id=\"protien_intake\"\r\n                                            type=\"number\"\r\n                                            placeholder=\"How many protien in grams\"\r\n                                            value={state.protien_intake}\r\n                                            onChange={handleChange} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label for=\"carbs\">What's your total carbs intake today?</label><br></br>\r\n                                        <input className=\"nutrition-supplements-feild\"\r\n                                            id=\"carbs_intake\"\r\n                                            type=\"number\"\r\n                                            placeholder=\"How many carbs in grams\"\r\n                                            value={state.carbs_intake}\r\n                                            onChange={handleChange} />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label for=\"fats\">What's your total fats intake today?</label><br></br>\r\n                                        <input className=\"nutrition-supplements-feild\"\r\n                                            id=\"fats_intake\"\r\n                                            type=\"number\"\r\n                                            placeholder=\"How many fats in grams\"\r\n                                            value={state.fats_intake}\r\n                                            onChange={handleChange} />\r\n                                    </div>\r\n                                    <button className=\"btnn\"\r\n                                        type=\"submit\"\r\n                                        onClick={handleSubmitClick_nutrition}>Submit</button>\r\n                                </div>\r\n                            </Popup>\r\n                        </div>\r\n                        <br></br>\r\n\r\n\r\n                    </div>\r\n                </Popup>\r\n                {/* <p className=\"outputOfTheDayFeild\">\r\n                    {state.day_event}\r\n                </p> */}\r\n\r\n            </div>\r\n            {/* </Popup>\r\n            </div > */}\r\n\r\n            <div className=\"split right\">\r\n                <form>\r\n                    <label>\r\n                        suggestions of the day:\r\n\r\n                        <p className=\"outputOfTheDayFeild\">\r\n                            {state.suggestion}\r\n                        </p>\r\n\r\n                    </label>\r\n                </form>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../RegisterationForm/RegisterationForm.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useContext } from 'react';\r\n\r\nimport { UserContext } from '../../App';\r\nimport { useEffect } from 'react';\r\n\r\nfunction UserProfile(props) {\r\n    const { userEmail, setUserEmail } = useContext(UserContext);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n    const [errorMessage2, setErrorMessage2] = React.useState(\"\");\r\n    useEffect(() => {\r\n        // ...\r\n        console.log(\"user email ::\" + userEmail)\r\n    }, [userEmail]);\r\n    const genderOptions = [\r\n        { value: '', text: '--Gender--' },\r\n        { value: 'male', text: 'Male' },\r\n        { value: 'female', text: 'Female' },\r\n    ];\r\n    const fitnessGoalOptions = [\r\n        { value: '', text: '--fitness goal--' },\r\n        { value: 'Bulk', text: 'bulk' },\r\n        { value: 'fit', text: 'fit' },\r\n        { value: 'maintenance', text: 'maintenance' },\r\n    ];\r\n    const fitnessLevelOptions = [\r\n        { value: '', text: '--fitness level--' },\r\n        { value: 'Begginer', text: 'Begginer' },\r\n        { value: 'Advanced', text: 'Advanced' },\r\n        { value: 'Intermedate', text: 'Intermedate' },\r\n    ];\r\n    const [selectedGender, setSelectedGender] = useState(genderOptions[0].value);\r\n    const [selectedGoal, setSelectedGoal] = useState(fitnessGoalOptions[0].value);\r\n    const [selectedLevel, setSelectedLevel] = useState(fitnessLevelOptions[0].value);\r\n\r\n    const [state, setState] = useState({\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        gender: \"\",\r\n        birthdayDate: \"\",\r\n        height: \"\",\r\n        weight: \"\",\r\n        fitnessLevel: \"\",\r\n        fitnessGoal: \"\",\r\n        trainingFrequency: \"\",\r\n        iron: false,\r\n        vitC: false,\r\n        vitD: false,\r\n        vitB12: false,\r\n        omega3: false,\r\n        calcium: false,\r\n        potasium: false,\r\n        magnisum: false,\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n    function isValidEmail(email) {\r\n        return /\\S+@\\S+\\.\\S+/.test(email);\r\n    }\r\n\r\n    function isValidPass(pass) {\r\n        return /^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8}$/.test(pass);\r\n    }\r\n\r\n    const handleChangeSelect = (e) => {\r\n        const { id, value } = e.target\r\n        if (id === 'gender')\r\n            setSelectedGender(e.target.value);\r\n        else if (id === 'fitnessGoal')\r\n            setSelectedGoal(e.target.value);\r\n        else if (id === 'fitnessLevel')\r\n            setSelectedLevel(e.target.value);\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        const payload = {\r\n            \"email\": userEmail,\r\n            \"userName\": state.userName,\r\n            \"height\": state.height,\r\n            \"weight\": state.weight,\r\n            \"fitnessLevel\": state.fitnessLevel,\r\n            \"fitnessGoal\": state.fitnessGoal,\r\n            \"trainingFrequency\": state.trainingFrequency,\r\n            \"iron\": state.iron,\r\n            \"vitC\": state.vitC,\r\n            \"vitD\": state.vitD,\r\n            \"vitB12\": state.vitB12,\r\n            \"omega3\": state.omega3,\r\n            \"calcium\": state.calcium,\r\n            \"potasium\": state.potasium,\r\n            \"magnisum\": state.magnisum\r\n        }\r\n        if (!isValidEmail(state.email)) {\r\n            setErrorMessage2(\"Incorrect email adress!\")\r\n        }\r\n        if (!isValidPass(state.password)) {\r\n            setErrorMessage(\"Weak password!, password must contain: 8 characters length,2 letters in Upper Case,1 Special Character (!@#$&*),2 numerals (0-9),3 letters in Lower Case\")\r\n        }\r\n        if (state.password === state.confirmPassword) {\r\n            if (state.password.length < 4) {\r\n                setErrorMessage(\"Weak password, try another one!\")\r\n            }\r\n        } else {\r\n            setErrorMessage(\"Passwords do not match!\")\r\n        }\r\n        console.log('heyaaaaaaaaaaaaaaaaaa', JSON.stringify(payload))\r\n\r\n\r\n        try {\r\n            const response = await axios.post(`http://localhost:8080/client/addRegForm\r\n            `, payload)\r\n            console.log(\"response::\" + response.status)\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"updated successfully:)\")\r\n                setUserEmail(state.email)\r\n                alert(\"wohoooooo\");\r\n            }\r\n            else if (response.status == 500) {\r\n                console.log(\"not update ...\")\r\n\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n            alert(\"wohooooooeeee\");\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n\r\n    }\r\n    const redirectToHome = () => {\r\n        // props.updateTitle('Home');\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToLogin = () => {\r\n        props.history.push('/login');\r\n    }\r\n    const [checked, setChecked] = useState(false);\r\n    const handleCheckboxChange = (e) => {\r\n        const { id, value } = e.target\r\n        switch (id) {\r\n            case 'iron':\r\n                state.iron = !state.iron;\r\n                break;\r\n            case 'vitC':\r\n                state.vitC = !state.vitC;\r\n                break;\r\n            case 'vitD':\r\n                state.vitD = !state.vitD;\r\n                break;\r\n            case 'vitB12':\r\n                state.vitB12 = !state.vitB12;\r\n                break;\r\n            case 'omega3':\r\n                state.omega3 = !state.omega3;\r\n                break;\r\n            case 'calcium':\r\n                state.calcium = !state.calcium;\r\n                break;\r\n            case 'potasium':\r\n                state.potasium = !state.potasium;\r\n                break;\r\n            case 'magnisum':\r\n                state.magnisum = !state.magnisum;\r\n                break;\r\n\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"outter_card login-card hv-center\">\r\n            <form className=\"form-register-container\">\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your user name :</p>\r\n                    <input type=\"text\"\r\n                        id=\"userName\"\r\n                        className=\"form-controll\"\r\n                        placeholder=\"Enter user name\"\r\n                        value={state.userName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your height :</p>\r\n                    <input type=\"number\"\r\n                        className=\"form-controll\"\r\n                        id=\"height\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Enter height\"\r\n                        value={state.height}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your weight :</p>\r\n                    <input type=\"number\"\r\n                        className=\"form-controll\"\r\n                        id=\"weight\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder=\"Enter weight\"\r\n                        value={state.weight}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your fitness level :</p>\r\n                    <select value={selectedLevel} onChange={handleChangeSelect} id=\"fitnessLevel\" className=\"fitnessLevel\">\r\n                        {fitnessLevelOptions.map(option => (\r\n                            <option className=\"optionss\" key={option.value} value={option.value}>\r\n                                {option.text}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your fitness goal :</p>\r\n                    <select value={selectedGoal} onChange={handleChangeSelect} id=\"fitnessGoal\" className=\"fitnessGoal\">\r\n                        {fitnessGoalOptions.map(option => (\r\n                            <option className=\"optionss\" key={option.value} value={option.value}>\r\n                                {option.text}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update your training days per week :</p>\r\n                    <input type=\"number\" value={state.trainingFrequency} onChange={handleChange} id=\"trainingFrequency\" className=\"quantity\" min=\"1\" max=\"7\" />\r\n\r\n                </div>\r\n\r\n                <div className=\"feild\">\r\n                    <p className=\"para\">Update deficincies :<br></br>\r\n                        <input id=\"iron\" value={state.iron} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"iron\"> Iron</label><br></br>\r\n                        <input id=\"vitC\" value={state.vitC} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"vitC\"> Vitamin C</label><br></br>\r\n                        <input id=\"vitD\" value={state.vitD} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"vitD\"> Vitamin D</label><br></br>\r\n                        <input id=\"omega3\" value={state.omega3} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"omaga3\"> Omega 3</label><br></br>\r\n                        <input id=\"vitB12\" value={state.vitB12} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"vitB12\"> Vitamin B12</label><br></br>\r\n                        <input id=\"calcium\" value={state.calcium} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"calcium\"> Calcium</label><br></br>\r\n                        <input id=\"potasium\" value={state.potasium} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"potasium\"> Potasium</label><br></br>\r\n                        <input id=\"magnisum\" value={state.magnisum} onChange={handleCheckboxChange} type=\"checkbox\" />\r\n                        <label for=\"magnisum\"> Magnisum</label><br></br>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"feild3\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={handleSubmitClick}\r\n                    >\r\n                        Update profile\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"alert alert-success mt\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                    {state.successMessage}\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(UserProfile);","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ContactUs.css';\r\nimport { API_BASE_URL, ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { render } from '@testing-library/react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\n\r\nimport { UserContext } from '../../App';\r\n\r\nfunction ContactUs(props) {\r\n    console.log(\" contact us page\")\r\n\r\n    const { userEmail, setUserEmail } = useContext(UserContext);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n\r\n    const [state, setState] = useState({\r\n        message: '',\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = async (e) => {\r\n        e.preventDefault();\r\n        console.log(state.email);\r\n        const payload = {\r\n            \"clientEmail\": userEmail,\r\n            \"id\": \"\",\r\n            \"message\": state.message\r\n        }\r\n        if (state.message === '') {\r\n            setErrorMessage(\"SORRY, we haven't get your message yet...\")\r\n        }\r\n        else\r\n            setErrorMessage(\"Thanks for your feedback!\")\r\n        // const response = await axios.post(`http://localhost:5000/Clients/create_user`, payload)\r\n        console.log('hey', JSON.stringify(payload))\r\n        var response;\r\n\r\n        try {\r\n\r\n            console.log(\"eshee\");\r\n            response = await axios.post(`http://localhost:8080/client/contact-us`, payload)\r\n            console.log(\"response:\")\r\n\r\n            if (response.status == 200) {\r\n                console.log(\"client info sent to server:)\" + response.status);\r\n\r\n            }\r\n            else if (response.status == 400) {\r\n                console.log(\"client info haven't sent to server...\" + response.status);\r\n            }\r\n        }\r\n        catch (error) {\r\n            // console.log(\"error::\" + error.response.data.error)\r\n\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            // console.log(\"error::\" + response.status)\r\n        }\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        props.history.push('/home');\r\n        //props.updateTitle('Home');\r\n        console.log(\"ittttttt isss redirect to home\");\r\n    }\r\n    const redirectToRegister1 = () => {\r\n        props.history.push('/register1');\r\n        //props.updateTitle('Register');\r\n        console.log(\"ittttttt isss redirect to register\");\r\n    }\r\n    return (\r\n        <div className=\"login-card hv-center\">\r\n            <div className=\"out-card\">\r\n                <div className=\"form-login-container out-cardd\">\r\n                    <form >\r\n                        <p className=\"para\"><br></br>We are glad to know your feedback :</p>\r\n                        <div className=\"feildss\">\r\n                            <textarea placeHolder=\"Write your feedback here :)\" id=\"message\" className=\"messagee\"\r\n                                value={state.message}\r\n                                onChange={handleChange}\r\n                                rows=\"4\" cols=\"50\">\r\n\r\n                            </textarea>\r\n                            <div className=\"feild2\">\r\n                                {errorMessage && <div className=\"error\"> {errorMessage} </div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"feilda\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary\"\r\n                                onClick={handleSubmitClick}\r\n                            >Submit</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                        {state.successMessage}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ContactUs);","import React, { Component } from 'react'\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link, withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport LoginForm from '../LoginForm/LoginForm';\r\nimport RegistrationForm from '../RegisterationForm/RegesterationForm1';\r\nimport UserProfile from '../userProfile/UserProfile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from \"../Home/Home\";\r\nimport LogIn from \"../LoginForm/LoginForm\";\r\nimport ContactUs from \"../contactUs/ContactUs\";\r\n\r\nimport { BsPerson } from 'react-icons/bs';\r\n\r\nimport './Header.css';\r\n\r\nfunction Header(props) {\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"header\">\r\n        <Navbar className=\"navbar navbar-dark bg-dark\">\r\n          <Container fluid>\r\n            <Navbar.Brand as={Link} to='/home'>Fitness & Nutrition App</Navbar.Brand>\r\n\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\">\r\n              <Nav\r\n                className=\"me-auto my-2 my-lg-0\"\r\n                style={{ maxHeight: '120px' }}\r\n                collapse navbar-collapse\r\n              >\r\n\r\n                <Nav.Link as={Link} to='/log-in'>Log in\r\n                  {/* <BsPerson /> */}\r\n                </Nav.Link>\r\n                {/* <Nav.Link as={Link} to='/register'>Register\r\n                </Nav.Link> */}\r\n                <Nav.Link as={Link} to='/userProfile'>Profile\r\n                </Nav.Link>\r\n                <Nav.Link as={Link} to='/contactUs'>Contact Us\r\n                </Nav.Link>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n      <div>\r\n        <Switch>\r\n          {/* <Route path=\"/\">\r\n              <Empty />\r\n            </Route> */}\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/log-in\">\r\n            <LogIn />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <RegistrationForm />\r\n          </Route>\r\n          <Route path=\"/userProfile\">\r\n            <UserProfile />\r\n          </Route>\r\n          <Route path=\"/contactUs\">\r\n            <ContactUs />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n\r\n}\r\nexport default withRouter(Header);","import React, { useState } from 'react';\r\nimport { Outlet, useLocation } from 'react-router-dom';\r\nimport './App.css';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport RegistrationForm1 from './components/RegisterationForm/RegesterationForm1';\r\nimport Home from './components/Home/Home';\r\nimport UserProfile from './components/userProfile/UserProfile';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import {Routes, Route, useNavigate} from 'react-router-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n//import Home from './components/pages';\r\nimport Header from './components/Header/Header';\r\nimport ContactUs from './components/contactUs/ContactUs';\r\n// import { withRouter } from 'react-router-dom'\r\n// import { useLocation } from 'react-router-dom';\r\nexport const UserContext = React.createContext(null);\r\n\r\nfunction App(props) {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  // 1234\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  // const location = useLocation();\r\n  //for hiding header on login/register page\r\n  const Layout = ({ hideHeaderPaths = [] }) => {\r\n    const { pathname } = useLocation();\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\" style={{ backgroundImage: `url(${require(\"../src/components/images/victor.jpg\")})` }}>\r\n        {/* {!hideHeaderPaths.includes(pathname) && <Header />} */}\r\n        {/* <Outlet /> */}\r\n        <UserContext.Provider value={{ userEmail, setUserEmail }}>\r\n          {/* <UserContext.Provider value={}> */}\r\n          <Header />\r\n          {/* {location.pathname !== '/exclusion-path' && <Header />} */}\r\n          <Switch>\r\n            <div className=\"container d-flex align-items-center flex-column\">\r\n              {/* <Route path='/'>\r\n              <Empty showError={updateErrorMessage} updateTitle={updateTitle} />\r\n            </Route> */}\r\n              {/* <Route path='/home'>\r\n                <Home showError={updateErrorMessage} updateTitle={updateTitle} />\r\n              </Route> */}\r\n              {/* <Route path='/register1'>\r\n                <RegistrationForm1 showError={updateErrorMessage} updateTitle={updateTitle} />\r\n              </Route>\r\n              <Route path='/login'>\r\n                <LoginForm showError={updateErrorMessage} updateTitle={updateTitle} />\r\n              </Route>\r\n              <Route path='/userProfile'>\r\n                <UserProfile showError={updateErrorMessage} updateTitle={updateTitle} />\r\n              </Route>\r\n              <Route path='/contactUs'>\r\n                <ContactUs showError={updateErrorMessage} updateTitle={updateTitle} />\r\n              </Route> */}\r\n            </div>\r\n          </Switch>\r\n        </UserContext.Provider>\r\n        {/* </UserContext.Provider> */}\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}